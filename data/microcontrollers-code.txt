~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (0, 0) at the 1st digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.hour / 10) + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, true, true, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (0, 1) at the 1st digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.hour / 10) + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, true, false, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (0, 2) at the 1st digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.hour / 10) + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, true, true, true, true, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (1, 0) at the 1st digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.hour / 10) + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, false, false, false, true, true, true, false, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (1, 1) at the 1st digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.hour / 10) + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {false, false, false, false, false, false, false, false, false, false}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (1, 2) at the 1st digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.hour / 10) + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, true, true, true, true, false, false, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (2, 0) at the 1st digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.hour / 10) + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, true, true, true, true, false, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (2, 1) at the 1st digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.hour / 10) + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {false, false, true, true, true, true, true, false, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (2, 2) at the 1st digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.hour / 10) + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, true, true, true, true, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (3, 0) at the 1st digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.hour / 10) + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, false, false, false, true, false, true, false}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (3, 1) at the 1st digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.hour / 10) + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {false, false, false, false, false, false, false, false, false, false}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (3, 2) at the 1st digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.hour / 10) + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, true, false, true, true, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (4, 0) at the 1st digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.hour / 10) + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, true, false, true, true, false, true, false}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (4, 1) at the 1st digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.hour / 10) + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, true, false, true, true, false, true, false}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (4, 2) at the 1st digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.hour / 10) + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, true, true, true, true, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (0, 0) at the 2nd digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.hour % 10 + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, true, true, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (0, 1) at the 2nd digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.hour % 10 + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, true, false, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (0, 2) at the 2nd digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.hour % 10 + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, true, true, true, true, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (1, 0) at the 2nd digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.hour % 10 + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, false, false, false, true, true, true, false, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (1, 1) at the 2nd digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.hour % 10 + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {false, false, false, false, false, false, false, false, false, false}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (1, 2) at the 2nd digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.hour % 10 + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, true, true, true, true, false, false, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (2, 0) at the 2nd digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.hour % 10 + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, true, true, true, true, false, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (2, 1) at the 2nd digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.hour % 10 + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {false, false, true, true, true, true, true, false, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (2, 2) at the 2nd digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.hour % 10 + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, true, true, true, true, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (3, 0) at the 2nd digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.hour % 10 + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, false, false, false, true, false, true, false}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (3, 1) at the 2nd digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.hour % 10 + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {false, false, false, false, false, false, false, false, false, false}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (3, 2) at the 2nd digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.hour % 10 + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, true, false, true, true, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (4, 0) at the 2nd digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.hour % 10 + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, true, false, true, true, false, true, false}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (4, 1) at the 2nd digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.hour % 10 + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, true, false, true, true, false, true, false}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (4, 2) at the 2nd digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.hour % 10 + 1]
   
   interrupt(60 * (60 - time.min) + (60 - time.sec), 'update')

elseif event.type == 'program' then
    mem.states = {true, true, true, true, true, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (0, 0) at the 3th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.min / 10) + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, true, true, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (0, 1) at the 3th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.min / 10) + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, true, false, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (0, 2) at the 3th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.min / 10) + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, true, true, true, true, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (1, 0) at the 3th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.min / 10) + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, false, false, false, true, true, true, false, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (1, 1) at the 3th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.min / 10) + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {false, false, false, false, false, false, false, false, false, false}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (1, 2) at the 3th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.min / 10) + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, true, true, true, true, false, false, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (2, 0) at the 3th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.min / 10) + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, true, true, true, true, false, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (2, 1) at the 3th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.min / 10) + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {false, false, true, true, true, true, true, false, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (2, 2) at the 3th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.min / 10) + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, true, true, true, true, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (3, 0) at the 3th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.min / 10) + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, false, false, false, true, false, true, false}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (3, 1) at the 3th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.min / 10) + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {false, false, false, false, false, false, false, false, false, false}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (3, 2) at the 3th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.min / 10) + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, true, false, true, true, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (4, 0) at the 3th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.min / 10) + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, true, false, true, true, false, true, false}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (4, 1) at the 3th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.min / 10) + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, true, false, true, true, false, true, false}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (4, 2) at the 3th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[math.floor(time.min / 10) + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, true, true, true, true, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (0, 0) at the 4th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.min % 10 + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, true, true, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (0, 1) at the 4th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.min % 10 + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, true, false, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (0, 2) at the 4th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.min % 10 + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, true, true, true, true, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (1, 0) at the 4th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.min % 10 + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, false, false, false, true, true, true, false, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (1, 1) at the 4th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.min % 10 + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {false, false, false, false, false, false, false, false, false, false}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (1, 2) at the 4th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.min % 10 + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, true, true, true, true, false, false, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (2, 0) at the 4th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.min % 10 + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, true, true, true, true, false, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (2, 1) at the 4th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.min % 10 + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {false, false, true, true, true, true, true, false, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (2, 2) at the 4th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.min % 10 + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, true, true, true, true, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (3, 0) at the 4th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.min % 10 + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, false, false, false, true, false, true, false}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (3, 1) at the 4th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.min % 10 + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {false, false, false, false, false, false, false, false, false, false}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (3, 2) at the 4th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.min % 10 + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, true, false, true, true, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (4, 0) at the 4th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.min % 10 + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, true, false, true, true, false, true, false}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (4, 1) at the 4th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.min % 10 + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, false, true, true, false, true, true, false, true, false}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- Code for pixel with coordinates (4, 2) at the 4th digit

local time = os.datetable()

if (event.type == 'interrupt' and event.iid == 'update') or
   ((event.type == 'on' or event.type == 'off') and event.pin.name == 'C') then

   port.a = pin.c and mem.states[time.min % 10 + 1]
   
   interrupt(60 - time.sec, 'update')

elseif event.type == 'program' then
    mem.states = {true, true, true, true, true, true, true, true, true, true}
    interrupt(1, 'update')
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

